diff --git a/pyjack.c b/pyjack3.c
index 16cdf8e..25cecdf 100644
--- a/pyjack.c
+++ b/pyjack3.c
@@ -1210,8 +1210,7 @@ puts("pyjack: dealloc");
 
 
 static PyTypeObject pyjack_ClientType = {
-    PyObject_HEAD_INIT(NULL)
-    /*ob_size*/             0, 
+    PyVarObject_HEAD_INIT(NULL, 0)
     /*tp_name*/             "jack.Client",
     /*tp_basicsize*/        sizeof(pyjack_client_t),
     /*tp_itemsize*/         0,
@@ -1253,20 +1252,27 @@ static PyTypeObject pyjack_ClientType = {
     /* tp_new */            Client_new,
 };
 
+static struct PyModuleDef moduledef = {
+    PyModuleDef_HEAD_INIT,
+    "jack",         // m_name
+    "This module provides bindings to manage clients for the Jack Audio Connection Kit architecture", // m_doc
+    -1,             // m_size
+    pyjack_methods, // m_methods
+    NULL,
+    NULL,
+    NULL,
+    NULL
+};
 
 
-#ifndef PyMODINIT_FUNC  /* declarations for DLL import/export */
-#define PyMODINIT_FUNC void
-#endif
 PyMODINIT_FUNC
-initjack(void)
+PyInit_jack(void)
 {
   PyObject *m, *d;
 
   if (PyType_Ready(&pyjack_ClientType) < 0)
-    return;
-  m = Py_InitModule3("jack", pyjack_methods,
-	"This module provides bindings to manage clients for the Jack Audio Connection Kit architecture");
+    return NULL;
+  m = PyModule_Create(&moduledef); 
   if (m == NULL)
     goto fail;
   d = PyModule_GetDict(m);
@@ -1305,10 +1311,9 @@ initjack(void)
     goto fail;
 
   // Init jack data structures
-  pyjack_init(&global_client);
-
-  return;
+  return m;
 
 fail:
   Py_FatalError("Failed to initialize module pyjack");
+  return NULL;
 }
